'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _Runner = require('./Runner');

var _Runner2 = _interopRequireDefault(_Runner);

var _ReportersDefaultReporter = require('./Reporters/DefaultReporter');

var _ReportersDefaultReporter2 = _interopRequireDefault(_ReportersDefaultReporter);

var _findParentDir = require('find-parent-dir');

var _findParentDir2 = _interopRequireDefault(_findParentDir);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _commander = require('commander');

var _commander2 = _interopRequireDefault(_commander);

var _util = require('util');

var _util2 = _interopRequireDefault(_util);

/**
 * Hello, CLI.
 */
_commander2['default'].version(require('../package.json').version).usage('[options] <file>').option('-b, --bench', 'measure and output timing data').option('-c, --config', 'set configuration file').parse(process.argv);

console.log('');

// File is a required parameter
if (_commander2['default'].args.length === 0) {
    console.error('You must provide a source file. See \'sasslint -h\' for details.');
    process.exit(1);
}

/**
 * Read input.
 */
var file = _path2['default'].resolve(_commander2['default'].args[0]);

// The file must exist!
if (!_fs2['default'].existsSync(file)) {
    console.error('Couldn\'t load \'' + file + '\'.');
    process.exit(1);
}

var input = _fs2['default'].readFileSync(file, 'utf-8');

/**
 * Read configuration file.
 */
var config = {};
if (_commander2['default'].config) {
    var configFile = _path2['default'].resolve(_commander2['default'].config);

    // The file must exist!
    if (!_fs2['default'].existsSync(file)) {
        console.error('Couldn\'t load \'' + file + '\'.');
        process.exit(1);
    }

    config = _fs2['default'].readFileSync(file, 'utf-8');
} else {
    var dir = _findParentDir2['default'].sync(_path2['default'].dirname(file), '.sasslint.json');
    if (dir) {
        config = JSON.parse(_fs2['default'].readFileSync(dir + '/.sasslint.json', 'utf-8'));
    }
}

/**
 * Lint!
 */
if (_commander2['default'].bench) {
    console.time('SassLint');
}

var runner = new _Runner2['default'](config);
var lints = runner.lint(input, { bench: _commander2['default'].bench });

if (_commander2['default'].bench) {
    console.timeEnd('SassLint');
}

/**
 * Output the results.
 */
var reporter = new _ReportersDefaultReporter2['default']();
reporter.report(lints, file);
reporter.summarize();