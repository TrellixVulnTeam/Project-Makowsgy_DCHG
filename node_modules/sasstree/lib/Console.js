"use strict";

var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };

var Parser = _interopRequire(require("./Parser"));

var fs = _interopRequire(require("fs"));

var path = _interopRequire(require("path"));

var program = _interopRequire(require("commander"));

var util = _interopRequire(require("util"));

/**
 * Hello, CLI.
 */
program.version(require("../package.json").version).usage("[options] <file>").option("-o, --output [filename]", "output the tree as JSON").option("-b, --bench", "measure and output timing data").parse(process.argv);

console.log("");

// File is a required parameter
if (program.args.length === 0) {
    console.error("You must provide a source file. See 'sasstree -h' for details.");
    process.exit(1);
}

/**
 * Read input.
 */
var file = path.resolve(program.args[0]);

// The file must exist!
if (!fs.existsSync(file)) {
    console.error("Couldn't load '" + file + "'.");
    process.exit(1);
}

var input = fs.readFileSync(file, "utf-8");

/**
 * Parse into an AST!
 */
if (program.bench) {
    console.time("SassTree");
}

var parser = new Parser();
var ast = parser.parse(input, { bench: program.bench });

if (program.bench) {
    console.timeEnd("SassTree");
}

/**
 * Output the AST to a JSON file.
 */
if (program.output) {
    fs.writeFile(program.output, JSON.stringify(ast), function (err) {
        if (err) throw err;
        console.log("Saved output to '" + program.output + "'.");
    });
} else {
    console.log("Parsed abstract syntax tree:");
    console.log(util.inspect(ast, { depth: null, colors: true }));
}