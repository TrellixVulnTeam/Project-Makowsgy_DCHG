"use strict";

var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };

var CodeMirror = _interopRequire(require("codemirror"));

var ObjectInspector = _interopRequire(require("react-object-inspector"));

var Parser = _interopRequire(require("./Parser"));

var React = _interopRequire(require("react"));

require("codemirror/mode/sass/sass");

function ready(fn) {
    if (document.readyState !== "loading") {
        fn();
    } else if (document.addEventListener) {
        document.addEventListener("DOMContentLoaded", fn);
    } else {
        document.attachEvent("onreadystatechange", function () {
            if (document.readyState !== "loading") {
                fn();
            }
        });
    }
}

/**
 * Render a visualization of the AST.
 */
function renderTree(input, canvas) {
    var scss = input.value;

    console.time("SassTree");

    var ast = undefined;
    try {
        var parser = new Parser();
        ast = parser.parse(scss, { bench: true });
        console.log(ast);
    } catch (e) {
        console.error(e);
        ast = "Parsing error.";
    }

    console.timeEnd("SassTree");

    React.render(React.createElement(ObjectInspector, { data: ast }), canvas);
}

ready(function () {
    var input = document.getElementById("scss");
    var canvas = document.getElementById("tree");
    renderTree(input, canvas);

    var sourceEditor = CodeMirror.fromTextArea(input, { mode: "sass" });
    sourceEditor.on("change", function (editor) {
        editor.save();
        renderTree(input, canvas);
    });
});